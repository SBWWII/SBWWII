Upgraded version

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sign Up - WWII Roundtable</title>
  <style>
    /* Fixing Form Alignment */
    form {
      display: flex;
      flex-direction: column;
      align-items: center;
      width: 50%;
      max-width: 400px;
    }

    input {
      width: 100%;
      padding: 10px;
      margin: 5px 0;
      border: 1px solid #ccc;
      border-radius: 5px;
      box-sizing: border-box;
    }

    label {
      display: block;
      text-align: left;
      width: 100%;
      font-weight: bold;
    }

    button {
      margin-top: 10px;
      padding: 10px;
      width: 100%;
      background-color: navy;
      color: white;
      border: none;
      cursor: pointer;
    }

    button:hover {
      background-color: royalblue;
    }
  </style>
</head>
<body>
  <p>Sign Up to Join the Discussion</p>
  <form id="myForm">
    <label for="firstName">First Name:</label>
    <input type="text" id="firstName" name="firstName" required>

    <label for="lastName">Last Name:</label>
    <input type="text" id="lastName" name="lastName" required>

    <label for="email">Your Email:</label>
    <input type="email" id="email" name="email" required aria-label="Enter your email">

    <button type="submit">Submit</button>
  </form>
</body>
</html>

    /* General Navigation Styles */
    nav ul {
      list-style-type: none;
      padding: 0;
      margin: 0;
      display: flex;
    }
    nav ul li {
      position: relative;
      padding: 10px;
    }
    nav ul li ul {
      opacity: 0;
      visibility: hidden;
      transform: translateY(-10px);
      transition: opacity 0.4s ease, transform 0.4s ease;
      position: absolute;
      background-color: white;
      padding: 0;
      border: 1px solid #ccc;
      z-index: 1000;
      max-height: 0;
      overflow: hidden;
    }
    nav ul li:hover ul,
    nav ul li:focus-within ul {
      opacity: 1;
      visibility: visible;
      transform: translateY(0);
      max-height: 500px; /* Allow submenu to "slide" open */
    }
    nav ul li ul li {
      display: block;
      padding: 8px 12px;
    }
    nav a {
      text-decoration: none;
      color: red;
      display: block;
    }
    nav a:hover {
      background-color: #f0f0f0;
    }
    nav a.active {
      color: red;
      font-weight: bold;
    }

    /* Dropdown arrow for menu items with submenus */
    nav ul li[aria-haspopup="true"] > a::after {
      content: " ▼";
      font-size: 0.8em;
    }
    nav ul li[aria-haspopup="true"]:hover > a::after,
    nav ul li[aria-haspopup="true"]:focus-within > a::after {
      content: " ▲";
    }

    /* Hamburger Button Styles */
    .menu-toggle {
      display: none;
      font-size: 2rem;
      background: none;
      border: none;
      cursor: pointer;
      margin: 10px;
      z-index: 2000;
    }
    .menu-toggle.open::after {
      content: "✖️";
    }
    .menu-toggle::after {
      content: "☰";
    }

    /* Page Layout */
    body {
      background: #6baed5;
      color: black;
      font-family: Arial, sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      margin: 0;
      padding: 0;
    }

    /* Content Boxes */
    .container {
      display: flex;
      justify-content: center;
      gap: 10px;
      flex-wrap: wrap;
      width: 100%;
      margin-bottom: 20px;
    }
    .box {
      background-color: white;
      padding: 20px;
      border: 2px solid black;
      flex: 0 1 300px;
      max-width: 300px;
    }
    .box img {
      width: 100%;
      height: auto;
      object-fit: cover;
    }

    /* Form Styles */
    form {
      margin-top: 20px;
      padding: 15px;
      background-color: white;
      border-radius: 8px;
      box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);
      width: min(90%, 500px);
    }
    button {
      padding: 10px 15px;
      background-color: navy;
      color: white;
      font-size: 16px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background 0.3s;
    }
    button:hover {
      background-color: red;
    }

    /* Error Message */
    #errorMessage {
      color: red;
      font-weight: bold;
    }
    #submittedData {
      margin-top: 20px;
      background: white;
      padding: 10px;
      border: 2px solid black;
      width: min(90%, 500px);
    }

    /* Mobile Menu Slide + Fade Animation */
    @media (max-width: 768px) {
      nav ul {
        overflow: hidden;
        max-height: 0;
        opacity: 0;
        flex-direction: column;
        width: 100%;
        background-color: white;
        transition: max-height 0.5s ease, opacity 0.5s ease;
      }
      nav ul.show {
        max-height: 500px;
        opacity: 1;
      }
      nav ul li {
        text-align: center;
      }
      .menu-toggle {
        display: block;
      }
    }
  </style>
</head>

<body>
  <h1>World War II Roundtable</h1>

  <div class="container">
    <div class="box">
      <img src="images/image1.jpg" alt="Historic WW2 discussion" loading="lazy">
    </div>
    <div class="box">
      <img src="images/image2.jpg" alt="WW2 artifacts display" loading="lazy">
    </div>
    <div class="box">
      <img src="images/image3.jpg" alt="WW2 veterans gathering" loading="lazy">
    </div>
  </div>

  <!-- Hamburger Menu Toggle -->
  <button class="menu-toggle" aria-label="Toggle Menu"></button>

  <!-- Navigation -->
  <nav>
    <ul>
      <li aria-haspopup="true">
        <a href="Meeting/meeting-agenda.html">Meeting</a>
        <ul>
          <li><a href="Meeting/meeting-minutes.html">Meeting Minutes</a></li>
          <li><a href="Meeting/agenda.html">Agenda</a></li>
        </ul>
      </li>
      <li><a href="Bylaws/bylaws.html">Bylaws</a></li>
      <li><a href="People/members.html">People</a></li>
      <li><a href="News/news.html">News</a></li>
      <li><a href="References/resources.html">References</a></li>
    </ul>
  </nav>

  <p>Sign Up to Join the Discussion</p>

  <form id="myForm">
    <label for="firstName">First Name:</label>
<input type="text" id="firstName" name="firstName" required>

<label for="lastName">Last Name:</label>
<input type="text" id="lastName" name="lastName" required>>

    <label for="email">Your Email:</label><br>
    <input type="email" id="email" name="email" required aria-label="Enter your email"><br><br>

    <label for="phone">Your Cell Phone:</label><br>
<input type="tel" id="phone" name="phone" pattern="[0-9]{10}" required aria-label="Enter your phone number"><br><br>

  <div id="errorMessage" role="alert"></div>
  <div id="submittedData"></div>

  <!-- JavaScript -->
  <script>
    function validateForm() {  // ✅ Corrected
() {
document.getElementById("myForm").addEventListener("submit", async function(event) {
    event.preventDefault(); // Prevent page refresh

    const name = document.getElementById("name").value.trim();
    const email = document.getElementById("email").value.trim();
    const phone = document.getElementById("phone").value.trim();
    const githubUsername = document.getElementById("github").value.trim();
    const errorDiv = document.getElementById("errorMessage");
    const submittedDataDiv = document.getElementById("submittedData");

    // Clear previous errors and submitted info
    errorDiv.innerHTML = "";
    submittedDataDiv.innerHTML = "";

    if (!name || !email || !phone || !githubUsername) {
        errorDiv.innerHTML += "<p>All fields are required.</p>";
        return;
    }
	"Authorization": `Bearer ${process.env.GITHUB_ACCESS_TOKEN}`
     const token = process.env.GITHUB_ACCESS_TOKEN; // Ensure this is loaded via    dotenv

const userResponse = await fetch(`https://api.github.com/users/${githubUsername}`, {
    headers: { "Authorization": `Bearer ${token}` }
});
const userData = await userResponse.json();
const inviteeId = userData.id; // Get user ID

// Now send the invitation
const response = await fetch("https://api.github.com/orgs/SBWWII/invitations", {
    method: "POST",
    headers: {
        "Authorization": `Bearer ${token}`,
        "Accept": "application/vnd.github.v3+json",
        "Content-Type": "application/json"
    },
    body: JSON.stringify({ invitee_id: inviteeId })
});
    headers: {
        "Authorization": `Bearer ${token}`,
        "Accept": "application/vnd.github.v3+json",
        "Content-Type": "application/json"
    },
    body: JSON.stringify({
        invitee_id: githubUsername // Use GitHub user ID instead
    })
});


    // GitHub API request (example: create an issue)
const response = await fetch("https://api.github.com/orgs/SBWWII/invitations", {
        method: "POST",
        headers: {
            GITHUB_ACCESS_TOKEN=your_personal_access_token}`,
            "Accept": "application/vnd.github.v3+json",
            "Content-Type": "application/json"
        },
        body: JSON.stringify({
            title: `New Signup: ${name}`,
            body: `Name: ${name}\nEmail: ${email}\nPhone: ${phone}\nGitHub Username: ${githubUsername}`,
        })
    });

    if (response.ok) {
        submittedDataDiv.innerHTML = `<h3>Successfully submitted!</h3>`;
    } else {
        errorDiv.innerHTML += `<p>Submission failed. Please try again.</p>`;
    }
});

      const name = document.getElementById("name").value.trim();
      const email = document.getElementById("email").value.trim();
      const phone = document.getElementById("phone").value.trim();
      const errorDiv = document.getElementById("errorMessage");
      const submittedDataDiv = document.getElementById("submittedData");


  // Clear previous errors and submitted info
      errorDiv.innerHTML = "";
      submittedDataDiv.innerHTML = "";

      let isValid = true;

      if (name.length < 3) {
        errorDiv.innerHTML += "<p>Name must be at least 3 characters long.</p>";
        isValid = false;
      }
      if (!email.includes("@") || !email.includes(".")) {
        errorDiv.innerHTML += "<p>Please enter a valid email address.</p>";
        isValid = false;
      }
      if (!/^\d{10}$/.test(phone)) {
        errorDiv.innerHTML += "<p>Phone number must be exactly 10 digits.</p>";
        isValid = false;
      }

      if (!isValid) {
        alert("Please fix the errors before submitting.");
        return;
      }

      // Display the user's submitted information
     if (response.ok) {
    submittedDataDiv.innerHTML = `<h3>Invitation sent! Please check your GitHub notifications.</h3>`;
} else {
    errorDiv.innerHTML += `<p>Submission failed. Please try again.</p>`;
}
      <p><strong>Name:</strong> ${name}</p>
      <p><strong>Email:</strong> ${email}</p>
      <p><strong>Phone:</strong> ${phone}</p>
  `;
      console.log("Validation successful.User info displayed.");
    }

    // Mobile menu toggle
    const menuToggle = document.querySelector('.menu-toggle');
    const navMenu = document.querySelector('nav ul');

    menuToggle.addEventListener('click', function() {
      navMenu.classList.toggle('show');
      menuToggle.classList.toggle('open');
document.getElementById("signupForm").addEventListener("submit", async function(event) {
    event.preventDefault(); // Prevent form refresh

    const githubUsername = document.getElementById("github").value.trim();
    if (!githubUsername) {
        alert("Please enter a GitHub username.");
        return;
    }

    sendSignupData(githubUsername);
});    

    sendSignupData(githubUsername);
});
    });
  </script>
</body>
</html>
